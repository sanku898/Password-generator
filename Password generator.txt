import random
import string
import tkinter as tk
from tkinter import messagebox

# Function to generate password
def generate_password():
    try:
        length = int(password_length_entry.get())
        if length < 1:
            raise ValueError("Password length must be greater than 0")

        characters = string.ascii_letters + string.digits + string.punctuation
        password = ''.join(random.choice(characters) for _ in range(length))
        generated_password_entry.delete(0, tk.END)
        generated_password_entry.insert(0, password)
    except ValueError as e:
        messagebox.showerror("Invalid input", str(e))

# Function to reset the fields
def reset_fields():
    user_name_entry.delete(0, tk.END)
    password_length_entry.delete(0, tk.END)
    generated_password_entry.delete(0, tk.END)

# GUI window setup
window = tk.Tk()
window.title("Password Generator")
window.geometry("400x300")
window.configure(bg='orange')

# Username label and entry
user_name_label = tk.Label(window, text="Enter User Name:", bg='orange', fg='black')
user_name_label.pack(pady=5)
user_name_entry = tk.Entry(window, width=30)
user_name_entry.pack(pady=5)

# Password length label and entry
password_length_label = tk.Label(window, text="Enter Password Length:", bg='orange', fg='black')
password_length_label.pack(pady=5)
password_length_entry = tk.Entry(window, width=30)
password_length_entry.pack(pady=5)

# Generated password label and entry (non-editable)
generated_password_label = tk.Label(window, text="Generated Password:", bg='orange', fg='black')
generated_password_label.pack(pady=5)
generated_password_entry = tk.Entry(window, width=30)
generated_password_entry.pack(pady=5)

# Generate button
generate_button = tk.Button(window, text="Generate Password", bg='lightgreen', command=generate_password)
generate_button.pack(pady=10)

# Accept and Reset buttons
accept_button = tk.Button(window, text="ACCEPT", bg='lightgreen')
accept_button.pack(side=tk.LEFT, padx=20)

reset_button = tk.Button(window, text="RESET", bg='lightgreen', command=reset_fields)
reset_button.pack(side=tk.RIGHT, padx=20)

# Start the GUI loop
window.mainloop()